% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unique_granges.R
\name{unique_granges}
\alias{unique_granges}
\title{Determine all unique rows in GRanges object}
\usage{
unique_granges(sites)

unique_granges(sites, sum.counts = TRUE, counts.col = "counts")
}
\arguments{
\item{sites}{A GRanges object with or without metadata columns.}

\item{sum.counts}{logical, if TRUE, the column specified by counts.col will
be summed for all rows combined. If FALSE, all columns are considered as
unique values.}

\item{counts.col}{character string specifying the name of the column to use
as counts.}
}
\description{
Given a GRanges object, this function returns all unique rows,
or observations, including the meta data information. Calling the function
\code{unique()} on a GRanges object only returns unique ranges, and does not
account for meta data information, unlike to a data.frame. Using the option
sum.counts = TRUE and specifying the counts.col = "" name, will sum the
numerical values within the column for all combined rows.
}
\details{
\code{unique_granges} returns a GRanges object of only unique observations (
removing all duplicated rows), yet considers the meta data information.
}
\examples{
gr <- gintools:::generate_test_granges(
  n_sites = 1,
  n_reads_p_site = 12,
  site_range = 1:20,
  read_width_range = 20:30
)
gr <- refine_breakpoints(gr)
gr <- standardize_intsites(gr)
gr <- granges(gr)
gr$sample <- rep(c("A","B"), 6)
gr$counts <- rep(1:4, c(3,3,3,3))

# Calling unique() on gr returns a miss interpreted data set
unique(gr)

# Using unique_granges() without options returns all distinct rows
unique_granges(gr)

# Using the options for sum.counts and counts.col, rows counts are added when
# combined together.
unique_granges(gr, sum.counts = TRUE, counts.col = "counts")

}
\author{
Christopher L. Nobles, Ph.D.
}
